<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Software Development | Buynov]]></title>
  <link href="http://buynov.com/blog/categories/software-development/atom.xml" rel="self"/>
  <link href="http://buynov.com/"/>
  <updated>2013-10-01T21:47:39+03:00</updated>
  <id>http://buynov.com/</id>
  <author>
    <name><![CDATA[Stefan Buynov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Motivation]]></title>
    <link href="http://buynov.com/blog/2012/03/20/motivation/"/>
    <updated>2012-03-20T10:22:45+02:00</updated>
    <id>http://buynov.com/blog/2012/03/20/motivation</id>
    <content type="html"><![CDATA[<p><a href="/images/2012/02/motivation.jpg"><img src="/images/2012/02/motivation.jpg" alt="" /></a></p>

<p>An <a href="http://www.avc.com/a_vc/2012/02/the-management-team-guest-post-from-joel-spolsky.html">article</a> by <a href="http://joelonsoftware.com/items/2012/02/13.html">Joel Spolsky</a> reminded me of my introductory management class at the University. There is (only) one topic I vividly remember from this class &ndash; theories of human motivation.
Basically, there are <a href="http://en.wikipedia.org/wiki/Theory_X_and_theory_Y">two</a> (well, <a href="http://en.wikipedia.org/wiki/Theory_Z">three</a> if we have to be exact, but the third one applies mainly for Asia). The difference is mainly in the assumptions about people/employees:</p>

<p><strong>Theory X</strong></p>

<p>This theory assumes that employees are lazy, dislike work and would avoid it at any opportunity. Managers should not trust employees and micro-manage them at all times, to make sure they actually do something useful. Employees are going to work only when forced to do so, they should be blamed for any misstep, and their only interest in the job is money.
__</p>

<p><strong>Theory Y</strong></p>

<p>This theory assumes that people are willing to take initiative, when given the chance to do so, be self-motivated and do more than is expected from them. Under appropriate conditions, people would acknowledge responsibility and commitment for themselves, feel the need to achieve goals for the sole purpose of feeling satisfied by their own achievements.</p>

<!-- More -->


<p>There are several parts of Joel&rsquo;s article that I liked &ndash; probably because of their defiant statements:</p>

<blockquote><p>Turns out, it’s positively de-motivating to work for a company where your job is just to shut up and take orders. In tech startup land, we all understand instinctively that we have to hire super smart people, but we forget that we then have to organize the workforce so that those people can use their brains 24/7.</p>

<p>&hellip;</p>

<p>The “management team” isn’t the “decision making” team. It’s a support function. You may want to call them administration instead of management, which will keep them from getting too big for their britches.</p></blockquote>

<p>Administrators aren’t supposed to make the hard decisions. They don’t know enough. All those super genius computer scientists that you had to recruit from MIT at great expense are supposed to make the hard decisions. That’s why you’re paying them&hellip;</p>

<p><a href="http://www.avc.com/a_vc/2012/02/the-management-team-guest-post-from-joel-spolsky.html">The article</a> is worth it &ndash; I would advise you to read it.</p>

<p>P.S. Somewhat related to this topic &ndash; <a href="/blog/2007/09/03/how-to-become-a-manager/">my thoughts</a> from several years back.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[REST Explained]]></title>
    <link href="http://buynov.com/blog/2010/03/25/rest-explained/"/>
    <updated>2010-03-25T07:53:12+02:00</updated>
    <id>http://buynov.com/blog/2010/03/25/rest-explained</id>
    <content type="html"><![CDATA[<p>The most brief and comprehensive explanation, that I came across of what <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer">REST</a> is &ndash; from <a href="http://martinfowler.com/">Martin Fowler</a> himself:</p>

<p><a href="http://martinfowler.com/articles/richardsonMaturityModel.html">Steps  toward the glory of REST</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rod Johnson on the future of Java]]></title>
    <link href="http://buynov.com/blog/2009/08/13/rod-johnson-on-the-future-of-java/"/>
    <updated>2009-08-13T23:09:07+03:00</updated>
    <id>http://buynov.com/blog/2009/08/13/rod-johnson-on-the-future-of-java</id>
    <content type="html"><![CDATA[<p><a href="http://www.infoq.com/presentations/SpringOne-Keynote-Rod-Johnson"><img src="/images/2009/08/rod_johnson.jpg" alt="The Future of Java Innovation" /></a></p>

<p>With respect to the news this week &ndash;  <a href="http://www.infoq.com/news/2009/08/vmware-springsource">VMware Acquires SpringSource</a> &ndash; I recalled <a href="http://www.infoq.com/presentations/SpringOne-Keynote-Rod-Johnson">a video</a> with <a href="http://www.springone2gx.com/conference/speaker/rod_johnson">Rod Johnson</a>, I recently saw. Rod Johnson talks about the future of Java innovation an Java in general, and to what extend will <a href="/blog/2009/07/19/oracle-to-buy-sun-part-two/">the deal between Oracle and SUN</a> affect it.  Don&rsquo;t be bothered by the duration of the presentation, I recommend the first 25-30 minutes (unless you are a Spring fan and you want to see a demo of the response to Rails &ndash; <a href="http://www.springsource.org/roo">Spring Roo</a>). Overall I find the expose quite reasonable and meaningful, and I will try to briefly retell it, in case you don&rsquo;t feel like watching it.</p>

<p>According to Rod Johnson, Oracle is quite a different company to SUN (and he is probably right). Oracle is not an innovative, but rather a successful company. And although those are not mutually exclusive definitions, there&rsquo;s a difference. <a href="http://en.wikipedia.org/wiki/Larry_Ellison">Larry Ellison</a> demonstrated many times a desire to win and dominate &ndash; it is not a coincidence that one of the biographical books about Larry Ellison is titled <a href="http://www.amazon.com/Everyone-Else-Must-Fail-Unvarnished/dp/B000H2N2G0/ref=pd_sim_b_2">&ldquo;Everyone Else Must Fail&rdquo;</a>. The acquisition of SUN is hardly driven by a desire to invest in the development of the technologies SUN owns. It is most likely targeted at increasing the income through SUN products. Or in other words, the purchase has a lot more meaning to Wall Street, than to the community of Java professionals. And we can forget about the <a href="http://jcp.org">Java Community Process</a>, the way we know it today.</p>

<p>Should the Java community be concerned, however? Most likely not. Thank God, <a href="http://openjdk.java.net/">SUN open sourced the Java virtual machine</a> recently and this thing alone, in the light of the recent news, was very important. Not only that, but SUN is not the most influential Java innovator lately. Google, Apache and IBM have significant contribution and Oracle would hardly be an obstacle for this to continue. Rod Johnson also mentions the growing popularity of languages and technologies based on the Java virtual machine, which are not directly bound to Java. At the end, naturally for a keynote at <a href="http://www.springone.com/">SpringOne</a>, Spring comes on stage. And the fact that Spring is much more popular and innovative Java technology, than the official <a href="http://java.sun.com/javaee/">Java EE</a>.</p>

<p>And now ask yourself, in the context of <a href="http://www.infoq.com/news/2009/08/vmware-springsource">the deal between VMware and SpringSource</a>, does Rod Johnson believe that VMware are an innovative company, or are $420 millions too bigger stake, to rely on principles?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java - strongly influenced by Objective-C]]></title>
    <link href="http://buynov.com/blog/2009/08/02/java-strongly-influenced-by-objective-c/"/>
    <updated>2009-08-02T18:13:10+03:00</updated>
    <id>http://buynov.com/blog/2009/08/02/java-strongly-influenced-by-objective-c</id>
    <content type="html"><![CDATA[<p>Interesting link: <a href="http://www.virtualschool.edu/objectivec/influenceOnJava.html">Java Was Strongly Influenced by Objective-C</a>.</p>

<p>Java as a programming language was strongly influenced by <a href="http://wikipedia.org/wiki/Objective-C">Objective-C</a>, which was then used by the <a href="http://wikipedia.org/wiki/NEXTSTEP">NeXTSTEP</a> team. NeXTSTEP was the operating system made by <a href="http://wikipedia.org/wiki/NeXT">NeXT</a>, the company that Steve Jobs founded after he left Apple in 1985. Finally, as of today Objective-C is the main programming language used by Apple, including for the iPhone.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Martin Fowler about Ruby]]></title>
    <link href="http://buynov.com/blog/2009/07/18/martin-fowler-about-ruby/"/>
    <updated>2009-07-18T12:13:15+03:00</updated>
    <id>http://buynov.com/blog/2009/07/18/martin-fowler-about-ruby</id>
    <content type="html"><![CDATA[<p><a href="/images/2009/07/martin_fowler.jpg"><img src="/images/2009/07/martin_fowler.jpg" alt="martin_fowler" /></a></p>

<p>In <a href="http://www.infoq.com/presentations/fowler-ruby">this presentation</a> from <a href="http://qcon.infoq.com/">QCon</a>, <a href="http://martinfowler.com">Martin Fowler</a> shares the experience of <a href="http://www.thoughtworks.com/">ThoughtWorks</a> with <a href="http://www.ruby-lang.org/">Ruby</a>. There is a transcript of the presentation, <a href="http://martinfowler.com/articles/rubyAtThoughtWorks.html">here</a>.</p>

<p>For three years ThoughtWorks worked on 41 projects with Ruby (and <a href="http://rubyonrails.org/">Rails</a>, primarily). Including one product of their own, <a href="http://studios.thoughtworks.com/mingle-agile-project-management">Мingle</a>.</p>

<p>For me personally, the main points are:</p>

<ul>
<li>With Ruby and Rails the programmers are more productive and they like working with it.</li>
<li>From the performance perspective, Ruby and Rails are slow, compared to other similar frameworks. Just <a href="http://studios.thoughtworks.com/mingle-agile-project-management/2.3/help/system_requirements.html">look at the hardware requirements</a> for Mingle for 40-50 users!</li>
<li>Ruby is not a mature technology. It lack developer instruments, for example. And I wouldn&rsquo;t believe they are not needed.</li>
</ul>

]]></content>
  </entry>
  
</feed>
